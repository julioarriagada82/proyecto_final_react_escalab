{"version":3,"sources":["webpack://proyecto-react-app/./src/components/collection/collection-item/CollectionItem.component.jsx","webpack://proyecto-react-app/./src/components/collection/collection-list/CollectionList.component.jsx","webpack://proyecto-react-app/./src/components/common/error-message/ErrorMessage.component.jsx","webpack://proyecto-react-app/./src/components/common/genre-movie/GenreMovie.component.jsx","webpack://proyecto-react-app/./src/components/movie/images/poster/Poster.component.jsx","webpack://proyecto-react-app/./src/constants/variables.js","webpack://proyecto-react-app/./src/pages/popular-movie/HomePopularMovie.component.jsx","webpack://proyecto-react-app/./src/assets/static/images/placeholder-poster.png"],"names":["CollectionItem","id","vote_average","poster_path","popularity","title","CollectionList","movies","map","otherCollectionProps","ErrorMessage","text","displayName","propTypes","PropTypes","isRequired","GenreMovie","getData","onSelect","selected","movie","name","string","Poster","PATH_IMAGE_w300","placeholder","PATH_IMAGE_w500","USER","PASS","HomePopularMovie","useContext","MoviesContext","popularMovies","genres","genreMovies","getMovieByGenreId","currentGenre","errorMovies","loadingMovies","applyFilter","genreId","length"],"mappings":"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","file":"src_pages_popular-movie_HomePopularMovie_component_jsx.bundle.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Poster from \"../../movie/images/poster/Poster.component\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst CollectionItem = ({ id, vote_average, poster_path, popularity, title }) => (\n\n    <Grid item xs={12} sm={6} md={3}>\n        <Link to={`/movie/details/${id}`} className=\"card-link\" >\n            <Paper className=\"paper\">\n                <h2>{title}</h2>\n                <Poster poster_path={poster_path} title={title} />\n                <ul>\n                    <li>Votaci√≥n: {vote_average}</li>\n                    <li>Popularidad: {popularity}</li>\n                </ul>\n            </Paper>\n        </Link>\n    </Grid>\n);\n\nexport default CollectionItem;","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CollectionItem from \"../collection-item/CollectionItem.component\";\n\nconst CollectionList = ({ movies }) => (\n      <Grid container spacing={3} justify=\"center\">\n        {movies.map(({ id, ...otherCollectionProps }) => (\n              <CollectionItem key={id} {...otherCollectionProps} id={id} />\n            ))}\n      </Grid>\n);\n\nexport default CollectionList;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst ErrorMessage = ({text}) => (\n  <Grid item xs={12}>\n    <Paper className=\"paper\">\n      <h2>{text}</h2>\n    </Paper>\n  </Grid>\n);\n\nErrorMessage.displayName = \"ErrorMessage\";\n\nexport default ErrorMessage;\n\n\nErrorMessage.propTypes = {\n  text: PropTypes.string.isRequired\n};","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\n\nconst GenreMovie = ({ getData,  onSelect = () => {}, selected }) => {\n  return (\n    <Grid item xs={12}>\n      <Paper className=\"paper\">\n        {getData.map((movie) => {\n          const { id, name } = movie;\n          return (\n            <ToggleButton\n              key={name}\n              id={id}\n              value={name}\n              selected={id === selected ? true : false}\n              onClick={() => onSelect(id)}\n            >\n              {name}\n            </ToggleButton>\n          );\n        })}\n      </Paper>\n    </Grid>\n  );\n};\n\nGenreMovie.displayName = \"GenreMovie\";\n\nexport default GenreMovie;\n\nGenreMovie.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  selected: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PATH_IMAGE_w300 } from '../../../../constants/variables'\nimport placeholder from '../../../../assets/static/images/placeholder-poster.png';\n\nconst Poster = ({ poster_path, title }) => {\n  return (\n    <img\n      src={poster_path ? `${PATH_IMAGE_w300}${poster_path}` : placeholder}\n      alt={`poster of ${title}`}\n      width='300px'\n      height='450px'\n    />\n  );\n};\n\nexport default Poster;\n\nPoster.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\n","export const PATH_IMAGE_w300 = 'http://image.tmdb.org/t/p/w300/'\nexport const PATH_IMAGE_w500 = 'http://image.tmdb.org/t/p/w500/'\nexport const USER = 'admin'\nexport const PASS = '1234'","import React, { Fragment, useContext } from \"react\";\nimport { MoviesContext } from \"../../context/MoviesContext\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GenreMovie from \"../../components/common/genre-movie/GenreMovie.component\";\n\nimport ErrorMessage from \"../../components/common/error-message/ErrorMessage.component\";\nimport Loader from \"../../components/common/loader/Loader.component\";\n\nimport CollectionList from \"../../components/collection/collection-list/CollectionList.component\";\n\nconst HomePopularMovie = () => {\n  const {\n    popularMovies,\n    genres,\n    genreMovies,\n    getMovieByGenreId,\n    currentGenre,\n    errorMovies,\n    loadingMovies,\n  } = useContext(MoviesContext);\n\n  const applyFilter = (genreId) => {\n    getMovieByGenreId(genreId);\n  };\n\n  return (\n    <Fragment>\n      <div className=\"root\">\n        <Grid container spacing={3} justify=\"center\">\n          <GenreMovie\n            getData={genres}\n            onSelect={applyFilter}\n            selected={currentGenre}\n          />\n        </Grid>\n      </div>\n      {loadingMovies ? (\n        <Loader />\n      ) : errorMovies ? (\n        <ErrorMessage />\n      ) : (\n        <CollectionList\n          movies={genreMovies.length > 0 ? genreMovies : popularMovies}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default HomePopularMovie;\n","export default __webpack_public_path__ + \"8dc055c4e00779bbac7a4139ef3aa980.png\";"],"sourceRoot":""}